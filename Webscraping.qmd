---
title: "Webscraping"
format: html
editor: source
editor_options: 
  chunk_output_type: console
---

```{r}
library(readr)
library(tidyverse)
library(stringr)
library(dplyr)
library(tmap)
library(ggmap)
library(sf)
library(ggspatial)
library(ggrepel)
# sample for reading in data that we scraped using Octoparse. 
shoreview_rentals <- read_csv("Shoreview_rentals.csv")
shoreview_buy <- read_csv("Shoreview_buy.csv")
riverside_rentals <- read_csv("Riverside_rentals.csv")
riverside_buy <- read_csv("Riverside_buy.csv")
```

```{r}
# clean the FUCK outta shoreview_buy
shoreview_buy <- shoreview_buy %>%
  rename("bedrooms" = "bedroom_s_",
         "bathrooms" = "bathroom_s_",
         ) %>%
  mutate(type = case_when(
    str_detect(status, "[Tt]ownhouse") ~ "Townhouse",
    str_detect(status, "[Hh]ouse") ~ "House",
    str_detect(status, "[Cc]ondo") ~ "Condo",
    str_detect(status, "\\b([Ll]and|[Ll]ot|[Nn]ew)|[Cc]oming\\b") ~ "Misc")) %>%
  mutate(status = "buy",
         price = parse_number(price),
         price = price / 1000) %>%
mutate(address_short = str_extract(address, "^([^,]*)")) %>%
  select(price, bedrooms, bathrooms, square_feet, status, address, type, address_short)

# clean the FUCK outta shoreview_rentals
shoreview_rentals <- shoreview_rentals %>%
  rename("bedrooms" = "bedroom_s_",
         "bathrooms" = "bathroom_s_",
         ) %>%
  mutate(type = case_when(
    str_detect(status, "[Tt]ownhouse") ~ "Townhouse rental",
    str_detect(status, "[Hh]ouse") ~ "House rental"))  %>%
  mutate(type = case_when(
    is.na(type) ~ "Apartment",
    TRUE ~ type
  )) %>%
  mutate(status = "rental",
         price = parse_number(price)) %>%
  mutate(address_short = str_extract(address, "^([^,]*)")) %>%
  select(price, bedrooms, bathrooms, square_feet, status, address, type, address_short)

# clean the FUCK outta riverside_buy 
riverside_buy <- riverside_buy %>%
  rename("bedrooms" = "bedroom_s_",
         "bathrooms" = "bathroom_s_",
         ) %>%
  mutate(price = parse_number(price),
         type = "House") %>%
  mutate(status = "buy") %>%
  mutate(address_short = str_extract(address, "^([^,]*)")) %>%
  select(price, bedrooms, bathrooms, square_feet, status, address, type, address_short)

# clean the FUCK outta riverside_rentals 
riverside_rentals <- riverside_rentals %>%
  rename("bedrooms" = "bedroom_s_",
         "bathrooms" = "bathroom_s_",
         ) %>%
  mutate(price = parse_number(price)) %>%
  mutate(type = "Apartment",
         status = "rental") %>%
  mutate(address_short = str_extract(address, "^([^,]*)")) %>%
  select(price, bedrooms, bathrooms, square_feet, status, address, type, address_short)
  
shoreview_full <- rbind(shoreview_buy, shoreview_rentals)
riverside_full <- rbind(riverside_buy, riverside_rentals)
```
# Function to plot map data. 

```{r}
plot_map<- function(data, rentBuy, size_variable, color_variable, label_size){
  data_small <- data %>%
    drop_na(c(.data[[size_variable]], .data[[color_variable]])) 

  addresses <- data %>%
    drop_na() %>%
    select(address)

  register_google(key = "AIzaSyA-CZDgJkk_zG_ULCoS-PosYIQF_ZzwQPs")

  coords <- geocode(addresses$address)

  data_coords <- cbind(data_small, coords) %>%
    st_as_sf(coords = c("lon", "lat"), crs = 4326) %>%
    st_transform(3857) %>%
    filter(status == rentBuy) 

  map <- ggplot(data_coords) +
    annotation_map_tile(type = "osm", zoomin = 0, progress = "none") +
    geom_sf(aes(size = .data[[size_variable]], color = .data[[color_variable]]), alpha = 0.7) +
    geom_label_repel(
      aes(label = address_short, x = st_coordinates(geometry)[,1], y = st_coordinates(geometry)[,2]),
      size = label_size, box.padding = 0.25, point.padding = 0.3, max.overlaps = Inf
    ) +
    labs(
      size = size_variable,
      color = color_variable,
      title = paste("Housing - ", rentBuy),
      x = "",
      y ="",
    ) +
    theme(
      axis.text.x = element_blank(),   
      axis.text.y = element_blank()    
    )
  return(map)
}

plot_map(shoreview_full, rentBuy = "rental", size_variable = "square_feet", color_variable = "bedrooms", label_size = 1.5) 
plot_map(riverside_full, rentBuy = "rental", size_variable = "square_feet", color_variable = "bedrooms", label_size = 2.0) 
```


